Buy_Date_p1p2[i] <- format(df_Strat[ind_up_p1p2[i], 1], "%Y-%m-%d")
Buy_Price_p1p2[i] <- df_Strat[ind_up_p1p2[i], 2]
Close_Date_p1p2[i] <- format(df_Strat[ind_down_p1p2[i], 1], "%Y-%m-%d")
Close_Price_p1p2[i] <- df_Strat[ind_down_p1p2[i], 2]
Strat_return_Buy_p1p2[i] <- (Close_Price_p1p2[i]/Buy_Price_p1p2[i] - 1) * 100
}
# Store data p2 vs p3
iter <- min(length(ind_up_p2p3), length(ind_down_p2p3))
Buy_Date_p2p3 <- vector(length = iter)
Buy_Price_p2p3 <- vector(length = iter)
Close_Date_p2p3 <- vector(length = iter)
Close_Price_p2p3 <- vector(length = iter)
Strat_return_Buy_p2p3 <- vector(length = iter)
for(i in 1:iter){
Buy_Date_p2p3[i] <- format(df_Strat[ind_up_p2p3[i], 1], "%Y-%m-%d")
Buy_Price_p2p3[i] <- df_Strat[ind_up_p2p3[i], 2]
Close_Date_p2p3[i] <- format(df_Strat[ind_down_p2p3[i], 1], "%Y-%m-%d")
Close_Price_p2p3[i] <- df_Strat[ind_down_p2p3[i], 2]
Strat_return_Buy_p2p3[i] <- (Close_Price_p2p3[i]/Buy_Price_p2p3[i] - 1) * 100
}
Strat_summary_Buy <- data.frame(Buy_Date_p1p2, Close_Date_p1p2, Buy_Price_p1p2,
Close_Price_p1p2, Strat_return_Buy_p1p2,
Buy_Date_p2p3, Close_Date_p2p3, Buy_Price_p2p3,
Close_Price_p2p3, Strat_return_Buy_p2p3)
colnames(Strat_summary_Buy) <- c("Buy Date p1p2", "Closing Date p1p2", "Buy Price p1p2",
"Closing Price p1p2", "Ret % (Buy) p1p2",
"Buy Date p2p3", "Closing Date p2p3", "Buy Price p2p3",
"Closing Price p2p3", "Ret % (Buy) p2p3")
## Sell Strategy   p1 vs p2
iter <- min(length(ind_up_p1p2), length(ind_down_p1p2))
Close_Date_p1p2 <- vector(length = iter)
Close_Price_p1p2 <- vector(length = iter)
Sell_Date_p1p2 <- vector(length = iter)
Sell_Price_p1p2 <- vector(length = iter)
Strat_return_Sell_p1p2 <- vector(length = iter)
for(i in 1:iter){
Sell_Date_p1p2[i] <- format(df_Strat[ind_down_p1p2[i], 1], "%Y-%m-%d")
Sell_Price_p1p2[i] <- df_Strat[ind_down_p1p2[i], 2]
Close_Date_p1p2[i] <- format(df_Strat[ind_up_p1p2[i+1], 1], "%Y-%m-%d")
Close_Price_p1p2[i] <- df_Strat[ind_up_p1p2[i+1], 2]
Strat_return_Sell_p1p2[i] <- (Close_Price_p1p2[i]/Sell_Price_p1p2[i] - 1) * 100 * -1
}
# Sell  p2 vs p3
iter <- min(length(ind_up_p2p3), length(ind_down_p2p3))
Close_Date_p2p3 <- vector(length = iter)
Close_Price_p2p3 <- vector(length = iter)
Sell_Date_p2p3 <- vector(length = iter)
Sell_Price_p2p3 <- vector(length = iter)
Strat_return_Sell_p2p3 <- vector(length = iter)
for(i in 1:iter){
Sell_Date_p2p3[i] <- format(df_Strat[ind_down_p2p3[i], 1], "%Y-%m-%d")
Sell_Price_p2p3[i] <- df_Strat[ind_down_p2p3[i], 2]
Close_Date_p2p3[i] <- format(df_Strat[ind_up_p2p3[i+1], 1], "%Y-%m-%d")
Close_Price_p2p3[i] <- df_Strat[ind_up_p2p3[i+1], 2]
Strat_return_Sell_p2p3[i] <- (Close_Price_p2p3[i]/Sell_Price_p2p3[i] - 1) * 100 * -1
}
Strat_summary_Sell <- data.frame(Sell_Date_p1p2, Close_Date_p1p2, Sell_Price_p1p2,
Close_Price_p1p2, Strat_return_Sell_p1p2,
Sell_Date_p2p3, Close_Date_p2p3, Sell_Price_p2p3,
Close_Price_p2p3, Strat_return_Sell_p2p3)
colnames(Strat_summary_Sell) <- c("Sell Date p1p2", "Closing Date p1p2", "Sell Price p1p2",
"Closing Price p1p2", "Ret % (Sell) p1p2",
"Sell Date p2p3", "Closing Date p2p3", "Sell Price p2p3",
"Closing Price p2p3", "Ret % (Sell) p2p3")
# Batting average
batt_avg_Buy <- round(length(which(Strat_summary_Buy$`Ret % (Buy) p1p2` >= 0 &
Strat_summary_Buy$`Ret % (Buy) p2p3` >= 0))
/(length(ind_up_p1p2) + length(ind_up_p2p3)) * 100, 2)
batt_avg_Sell <- round(length(which(Strat_summary_Sell$`Ret % (Sell) p1p2` >= 0 &
Strat_summary_Sell$`Ret % (Sell) p1p2` >= 0))
/(length(ind_down_p1p2) + length(ind_down_p2p3)) * 100, 2)
# Output
list(df_Strat, Strat_summary_Buy, Strat_summary_Sell, batt_avg_Buy, batt_avg_Sell)
}
Strategy_AEMA(EMA(Prices, periods), periods)
Strategy_AEMA(EMA(Prices, periods), periods)[[1]][7]
sum(Strategy_AEMA(EMA(Prices, periods), periods)[[1]][7])
files_source <- list.files(path = "Strategies/Adri_Strategy/", full.names = TRUE)
files_source <- files_source[!grepl("main", files_source)]
sapply(files_source, source, .GlobalEnv)
files_names <- list.files(path = "data/activos/", full.names = TRUE)
result <- data.frame(
ticker = vector(length = length(files_names)),
batt_avg_Buy = vector(length = length(files_names)),
batt_avg_Sell = vector(length = length(files_names))
)
## Select the periods for the Adri Strategy
periods <- c(8, 21, 200)
cont <- 1
system.time(
for (i in files_names){
print(cont)
Prices <- read_csv(file = i, col_types = list("D", "d", "d", "d", "d", "d", "d"))[-c(6, 7)]
Ticker <- gsub(pattern = "\\.Open", replacement = "", colnames(Prices)[2])
colnames(Prices) <- c("Date", "Open", "High", "Low", "Close")
result$ticker[cont] <- Ticker
result$batt_avg_Buy[cont] <- Strategy_AEMA(EMA(Prices, periods), periods)[[4]]
result$batt_avg_Sell[cont] <- Strategy_AEMA(EMA(Prices, periods), periods)[[5]]
cont <- cont + 1
}
)
debug(Strategy_AEMA)
system.time(
for (i in files_names){
print(cont)
Prices <- read_csv(file = i, col_types = list("D", "d", "d", "d", "d", "d", "d"))[-c(6, 7)]
Ticker <- gsub(pattern = "\\.Open", replacement = "", colnames(Prices)[2])
colnames(Prices) <- c("Date", "Open", "High", "Low", "Close")
result$ticker[cont] <- Ticker
result$batt_avg_Buy[cont] <- Strategy_AEMA(EMA(Prices, periods), periods)[[4]]
result$batt_avg_Sell[cont] <- Strategy_AEMA(EMA(Prices, periods), periods)[[5]]
cont <- cont + 1
}
)
Buy_Date_p1p2
Close_Date_p1p2
Buy_Price_p1p2
Close_Price_p1p2
Strat_return_Buy_p1p2
Buy_Date_p2p3
Close_Date_p2p3
Buy_Price_p2p3
Close_Price_p2p3
View(EMA)
View(EMA)
debug(Strategy_AEMA)
Strategy_AEMA(EMA(Prices, periods), periods)
Strategy_AEMA(EMA(Prices, periods), periods)
Buy_Date_p1p2
View(Strat_summary)
Strategy_AEMA(EMA(Prices, periods), periods)
p1 = periods[1]
p2 = periods[2]
p3 = periods[3]
#Rearrange the dataframe
df_Strat <- data.frame(EMA[,c(1, 5, 6, 7, 8)])
colnames(df_Strat) <- c('Date', "Close", paste("EMA", p1),
paste("EMA", p2), paste("EMA", p3))
EMA = EMA(Prices, periods)
p1 = periods[1]
p2 = periods[2]
p3 = periods[3]
#Rearrange the dataframe
df_Strat <- data.frame(EMA[,c(1, 5, 6, 7, 8)])
colnames(df_Strat) <- c('Date', "Close", paste("EMA", p1),
paste("EMA", p2), paste("EMA", p3))
# To Store the crossings Up = 1, Down = -1, Flat = 0 of the MA
Cross_ts <- array(NA, c(length = nrow(df_Strat), 2))
# Initialize the first point
Cross_ts[max(p1, p2), 1] <- 0
if(length(df_Strat$Date) > p3){
Cross_ts[max(p2, p3), 2] <- 0
}
for(i in (max(p1, p2) + 1):nrow(df_Strat)){
if(df_Strat[i - 1, 3] < df_Strat[i - 1, 4] &
df_Strat[i, 3] > df_Strat[i, 4]){
Cross_ts[i, 1] <- 1
}else if(df_Strat[i - 1, 3] > df_Strat[i - 1, 4] &
df_Strat[i, 3] < df_Strat[i, 4]){
Cross_ts[i, 1] <- -1
}else{
Cross_ts[i, 1] <- 0
}
}
# Fill the other points in column 2: p2 vs p3.
if(length(df_Strat$Date) < p3){
Cross_ts[, 2] <- 0
}else{
for(i in (max(p2, p3) + 1):nrow(df_Strat)){
if(df_Strat[i - 1, 4] < df_Strat[i - 1, 5] &
df_Strat[i, 4] > df_Strat[i, 5]){
Cross_ts[i, 2] <- 1
}else if(df_Strat[i - 1, 4] > df_Strat[i - 1, 5] &
df_Strat[i, 4] < df_Strat[i, 5]){
Cross_ts[i, 2] <- -1
}else{
Cross_ts[i, 2] <- 0
}
}
}
df_Strat$Crosses_p1p2 <- Cross_ts[, 1]
df_Strat$Crosses_p2p3 <- Cross_ts[, 2]
# Calculate the returns at each -1 point (Sell Point)
# 1) Get the indices for 1 and -1
ind_up_p1p2 <- which(df_Strat$Crosses_p1p2 == 1)
ind_down_p1p2 <- which(df_Strat$Crosses_p1p2 == -1)
ind_up_p2p3 <- which(df_Strat$Crosses_p2p3 == 1)
ind_down_p2p3 <- which(df_Strat$Crosses_p2p3 == -1)
## Buy Strategy
iter <- min(length(ind_up_p1p2), length(ind_down_p1p2))
Buy_Date_p1p2 <- vector(length = iter)
Buy_Price_p1p2 <- vector(length = iter)
Close_Date_p1p2 <- vector(length = iter)
Close_Price_p1p2 <- vector(length = iter)
Strat_return_Buy_p1p2 <- vector(length = iter)
for(i in 1:iter){
Buy_Date_p1p2[i] <- format(df_Strat[ind_up_p1p2[i], 1], "%Y-%m-%d")
Buy_Price_p1p2[i] <- df_Strat[ind_up_p1p2[i], 2]
Close_Date_p1p2[i] <- format(df_Strat[ind_down_p1p2[i], 1], "%Y-%m-%d")
Close_Price_p1p2[i] <- df_Strat[ind_down_p1p2[i], 2]
Strat_return_Buy_p1p2[i] <- (Close_Price_p1p2[i]/Buy_Price_p1p2[i] - 1) * 100
}
iter <- min(length(ind_up_p2p3), length(ind_down_p2p3))
Buy_Date_p2p3 <- vector(length = iter)
Buy_Price_p2p3 <- vector(length = iter)
Close_Date_p2p3 <- vector(length = iter)
Close_Price_p2p3 <- vector(length = iter)
Strat_return_Buy_p2p3 <- vector(length = iter)
for(i in 1:iter){
Buy_Date_p2p3[i] <- format(df_Strat[ind_up_p2p3[i], 1], "%Y-%m-%d")
Buy_Price_p2p3[i] <- df_Strat[ind_up_p2p3[i], 2]
Close_Date_p2p3[i] <- format(df_Strat[ind_down_p2p3[i], 1], "%Y-%m-%d")
Close_Price_p2p3[i] <- df_Strat[ind_down_p2p3[i], 2]
Strat_return_Buy_p2p3[i] <- (Close_Price_p2p3[i]/Buy_Price_p2p3[i] - 1) * 100
}
Strat_summary_Buy1 <- data.frame(Buy_Date_p1p2, Close_Date_p1p2, Buy_Price_p1p2,
Close_Price_p1p2, Strat_return_Buy_p1p2)
Strat_summary_Buy2 <- data.frame(Buy_Date_p2p3, Close_Date_p2p3, Buy_Price_p2p3,
Close_Price_p2p3, Strat_return_Buy_p2p3)
colnames(Strat_summary_Buy1) <- c("Buy Date p1p2", "Closing Date p1p2", "Buy Price p1p2",
"Closing Price p1p2", "Ret % (Buy) p1p2")
colnames(Strat_summary_Buy2) <- c("Buy Date p2p3", "Closing Date p2p3", "Buy Price p2p3",
"Closing Price p2p3", "Ret % (Buy) p2p3")
Strat_summary_Buy <- list(Strat_summary_Buy1, Strat_summary_Buy2)
View(Strat_summary_Buy)
iter <- min(length(ind_up_p1p2), length(ind_down_p1p2))
Close_Date_p1p2 <- vector(length = iter)
Close_Price_p1p2 <- vector(length = iter)
Sell_Date_p1p2 <- vector(length = iter)
Sell_Price_p1p2 <- vector(length = iter)
Strat_return_Sell_p1p2 <- vector(length = iter)
for(i in 1:iter){
Sell_Date_p1p2[i] <- format(df_Strat[ind_down_p1p2[i], 1], "%Y-%m-%d")
Sell_Price_p1p2[i] <- df_Strat[ind_down_p1p2[i], 2]
Close_Date_p1p2[i] <- format(df_Strat[ind_up_p1p2[i+1], 1], "%Y-%m-%d")
Close_Price_p1p2[i] <- df_Strat[ind_up_p1p2[i+1], 2]
Strat_return_Sell_p1p2[i] <- (Close_Price_p1p2[i]/Sell_Price_p1p2[i] - 1) * 100 * -1
}
# Sell  p2 vs p3
iter <- min(length(ind_up_p2p3), length(ind_down_p2p3))
Close_Date_p2p3 <- vector(length = iter)
Close_Price_p2p3 <- vector(length = iter)
Sell_Date_p2p3 <- vector(length = iter)
Sell_Price_p2p3 <- vector(length = iter)
Strat_return_Sell_p2p3 <- vector(length = iter)
for(i in 1:iter){
Sell_Date_p2p3[i] <- format(df_Strat[ind_down_p2p3[i], 1], "%Y-%m-%d")
Sell_Price_p2p3[i] <- df_Strat[ind_down_p2p3[i], 2]
Close_Date_p2p3[i] <- format(df_Strat[ind_up_p2p3[i+1], 1], "%Y-%m-%d")
Close_Price_p2p3[i] <- df_Strat[ind_up_p2p3[i+1], 2]
Strat_return_Sell_p2p3[i] <- (Close_Price_p2p3[i]/Sell_Price_p2p3[i] - 1) * 100 * -1
}
Strat_summary_Sell1 <- data.frame(Sell_Date_p1p2, Close_Date_p1p2, Sell_Price_p1p2,
Close_Price_p1p2, Strat_return_Sell_p1p2)
Strat_summary_Sell2 <- data.frame(Sell_Date_p2p3, Close_Date_p2p3, Sell_Price_p2p3,
Close_Price_p2p3, Strat_return_Sell_p2p3)
colnames(Strat_summary_Sell1) <- c("Sell Date p1p2", "Closing Date p1p2", "Sell Price p1p2",
"Closing Price p1p2", "Ret % (Sell) p1p2")
colnames(Strat_summary_Sell2) <- c("Sell Date p2p3", "Closing Date p2p3", "Sell Price p2p3",
"Closing Price p2p3", "Ret % (Sell) p2p3")
Strat_summary_Sell <- list(Strat_summary_Sell1, Strat_summary_Sell2)
# Batting average
batt_avg_Buy <- round(length(which(Strat_summary_Buy$`Ret % (Buy) p1p2` >= 0 &
Strat_summary_Buy$`Ret % (Buy) p2p3` >= 0))
/(length(ind_up_p1p2) + length(ind_up_p2p3)) * 100, 2)
Strat_summary_Sell1 <- data.frame(Sell_Date_p1p2, Close_Date_p1p2, Sell_Price_p1p2,
Close_Price_p1p2, Strat_return_Sell_p1p2)
Strat_summary_Sell2 <- data.frame(Sell_Date_p2p3, Close_Date_p2p3, Sell_Price_p2p3,
Close_Price_p2p3, Strat_return_Sell_p2p3)
colnames(Strat_summary_Sell1) <- c("Sell Date p1p2", "Closing Date p1p2", "Sell Price p1p2",
"Closing Price p1p2", "Ret % (Sell) p1p2")
colnames(Strat_summary_Sell2) <- c("Sell Date p2p3", "Closing Date p2p3", "Sell Price p2p3",
"Closing Price p2p3", "Ret % (Sell) p2p3")
Strat_summary_Sell <- list(Strat_summary_Sell1, Strat_summary_Sell2)
# Batting average
batt_avg_Buy <- round(length(which(Strat_summary_Buy1$`Ret % (Buy) p1p2` >= 0 &
Strat_summary_Buy2$`Ret % (Buy) p2p3` >= 0))
/(length(ind_up_p1p2) + length(ind_up_p2p3)) * 100, 2)
batt_avg_Sell <- round(length(which(Strat_summary_Sell1$`Ret % (Sell) p1p2` >= 0 &
Strat_summary_Sell2$`Ret % (Sell) p1p2` >= 0))
/(length(ind_down_p1p2) + length(ind_down_p2p3)) * 100, 2)
colnames(Strat_summary_Sell2) <- c("Sell Date p2p3", "Closing Date p2p3", "Sell Price p2p3",
"Closing Price p2p3", "Ret % (Sell) p2p3")
Strat_summary_Sell <- list(Strat_summary_Sell1, Strat_summary_Sell2)
# Batting average
batt_avg_Buy <- round(length(which(Strat_summary_Buy1$`Ret % (Buy) p1p2` >= 0)) +
length(which(Strat_summary_Buy2$`Ret % (Buy) p2p3` >= 0))
/(length(ind_up_p1p2) + length(ind_up_p2p3)) * 100, 2)
batt_avg_Sell <- round(length(which(Strat_summary_Sell1$`Ret % (Sell) p1p2` >= 0 )) +
length(which(Strat_summary_Sell2$`Ret % (Sell) p1p2` >= 0))
/(length(ind_down_p1p2) + length(ind_down_p2p3)) * 100, 2)
# Output
list(df_Strat, Strat_summary_Buy, Strat_summary_Sell, batt_avg_Buy, batt_avg_Sell)
Strategy_AEMA(EMA(Prices, periods), periods)
undebug(Strategy_AEMA)
Strategy_AEMA(EMA(Prices, periods), periods)
EMA <- function(Prices, periods){
# Handle NA values
for(i in 2:nrow(Prices)){
if(is.na(Prices$Close[i]) == TRUE){
Prices$Open[i] <- Prices$Open[i - 1]
Prices$High[i] <- Prices$High[i - 1]
Prices$Low[i] <- Prices$Low[i - 1]
Prices$Close[i] <- Prices$Close[i - 1]
}
}
p1 <- periods[1]
p2 <- periods[2]
p3 <- periods[3]
nb_ps <- length(periods)
EMA_prices <- array(NA, dim = c(length(Prices$Close), nb_ps))
# Calculate the first EMA, which is a SMA over the periods p
EMA_prices[p1,1] = mean(Prices$Close[1:p1])
EMA_prices[p2,2] = mean(Prices$Close[1:p2])
if(length(Prices$Close) > p3){
EMA_prices[p3,3] = mean(Prices$Close[1:p3])
}
# Calculate the weighting value k = 2/(p + 1)
k1 = 2/(p1 + 1)
k2 = 2/(p2 + 1)
if(length(Prices$Close) > p3){
k3 = 2/(p3 + 1)
}else{
k3 = 0
}
# Fill the other points
for(i in 1:length(Prices$Close)){
if(is.na(EMA_prices[length(Prices$Close), 1]) == T){
EMA_prices[p1 + i, 1] = Prices$Close[p1 + i]*k1 + EMA_prices[p1 + i - 1, 1]*(1 - k1)
}
if(is.na(EMA_prices[length(Prices$Close), 2]) == T){
EMA_prices[p2 + i, 2] = Prices$Close[p2 + i]*k2 + EMA_prices[p2 + i - 1, 2]*(1 - k2)
}
if(is.na(EMA_prices[length(Prices$Close), 3]) == T & k3 != 0){
EMA_prices[p3 + i, 3] = Prices$Close[p3 + i]*k3 + EMA_prices[p3 + i - 1, 3]*(1 - k3)
}
}
EMA_prices <- data.frame(Prices, EMA_prices)
colnames(EMA_prices) <- c("Date", "Open", "High", "Low", "Close",
paste("EMA", p1), paste("EMA", p2), paste("EMA", p3))
return(EMA_prices)
}
Strategy_AEMA(EMA(Prices, periods), periods)
# This function implements the Adri EMA strategy
Strategy_AEMA <- function(EMA, periods){
p1 = periods[1]
p2 = periods[2]
p3 = periods[3]
#Rearrange the dataframe
df_Strat <- data.frame(EMA[,c(1, 5, 6, 7, 8)])
colnames(df_Strat) <- c('Date', "Close", paste("EMA", p1),
paste("EMA", p2), paste("EMA", p3))
# To Store the crossings Up = 1, Down = -1, Flat = 0 of the MA
Cross_ts <- array(NA, c(length = nrow(df_Strat), 2))
# Initialize the first point
Cross_ts[max(p1, p2), 1] <- 0
if(length(df_Strat$Date) > p3){
Cross_ts[max(p2, p3), 2] <- 0
}
# Fill the other points in column 1: p1 vs p2.
for(i in (max(p1, p2) + 1):nrow(df_Strat)){
if(df_Strat[i - 1, 3] < df_Strat[i - 1, 4] &
df_Strat[i, 3] > df_Strat[i, 4]){
Cross_ts[i, 1] <- 1
}else if(df_Strat[i - 1, 3] > df_Strat[i - 1, 4] &
df_Strat[i, 3] < df_Strat[i, 4]){
Cross_ts[i, 1] <- -1
}else{
Cross_ts[i, 1] <- 0
}
}
# Fill the other points in column 2: p2 vs p3.
if(length(df_Strat$Date) < p3){
Cross_ts[, 2] <- 0
}else{
for(i in (max(p2, p3) + 1):nrow(df_Strat)){
if(df_Strat[i - 1, 4] < df_Strat[i - 1, 5] &
df_Strat[i, 4] > df_Strat[i, 5]){
Cross_ts[i, 2] <- 1
}else if(df_Strat[i - 1, 4] > df_Strat[i - 1, 5] &
df_Strat[i, 4] < df_Strat[i, 5]){
Cross_ts[i, 2] <- -1
}else{
Cross_ts[i, 2] <- 0
}
}
}
df_Strat$Crosses_p1p2 <- Cross_ts[, 1]
df_Strat$Crosses_p2p3 <- Cross_ts[, 2]
# Calculate the returns at each -1 point (Sell Point)
# 1) Get the indices for 1 and -1
ind_up_p1p2 <- which(df_Strat$Crosses_p1p2 == 1)
ind_down_p1p2 <- which(df_Strat$Crosses_p1p2 == -1)
ind_up_p2p3 <- which(df_Strat$Crosses_p2p3 == 1)
ind_down_p2p3 <- which(df_Strat$Crosses_p2p3 == -1)
# 2) Store data p1 vs p2
## Buy Strategy
iter <- min(length(ind_up_p1p2), length(ind_down_p1p2))
Buy_Date_p1p2 <- vector(length = iter)
Buy_Price_p1p2 <- vector(length = iter)
Close_Date_p1p2 <- vector(length = iter)
Close_Price_p1p2 <- vector(length = iter)
Strat_return_Buy_p1p2 <- vector(length = iter)
for(i in 1:iter){
Buy_Date_p1p2[i] <- format(df_Strat[ind_up_p1p2[i], 1], "%Y-%m-%d")
Buy_Price_p1p2[i] <- df_Strat[ind_up_p1p2[i], 2]
Close_Date_p1p2[i] <- format(df_Strat[ind_down_p1p2[i], 1], "%Y-%m-%d")
Close_Price_p1p2[i] <- df_Strat[ind_down_p1p2[i], 2]
Strat_return_Buy_p1p2[i] <- (Close_Price_p1p2[i]/Buy_Price_p1p2[i] - 1) * 100
}
# Store data p2 vs p3
iter <- min(length(ind_up_p2p3), length(ind_down_p2p3))
Buy_Date_p2p3 <- vector(length = iter)
Buy_Price_p2p3 <- vector(length = iter)
Close_Date_p2p3 <- vector(length = iter)
Close_Price_p2p3 <- vector(length = iter)
Strat_return_Buy_p2p3 <- vector(length = iter)
for(i in 1:iter){
Buy_Date_p2p3[i] <- format(df_Strat[ind_up_p2p3[i], 1], "%Y-%m-%d")
Buy_Price_p2p3[i] <- df_Strat[ind_up_p2p3[i], 2]
Close_Date_p2p3[i] <- format(df_Strat[ind_down_p2p3[i], 1], "%Y-%m-%d")
Close_Price_p2p3[i] <- df_Strat[ind_down_p2p3[i], 2]
Strat_return_Buy_p2p3[i] <- (Close_Price_p2p3[i]/Buy_Price_p2p3[i] - 1) * 100
}
Strat_summary_Buy1 <- list(Buy_Date_p1p2, Close_Date_p1p2, Buy_Price_p1p2,
Close_Price_p1p2, Strat_return_Buy_p1p2)
Strat_summary_Buy2 <- list(Buy_Date_p2p3, Close_Date_p2p3, Buy_Price_p2p3,
Close_Price_p2p3, Strat_return_Buy_p2p3)
names(Strat_summary_Buy1) <- c("Buy Date p1p2", "Closing Date p1p2", "Buy Price p1p2",
"Closing Price p1p2", "Ret % (Buy) p1p2")
names(Strat_summary_Buy2) <- c("Buy Date p2p3", "Closing Date p2p3", "Buy Price p2p3",
"Closing Price p2p3", "Ret % (Buy) p2p3")
Strat_summary_Buy <- list(Strat_summary_Buy1, Strat_summary_Buy2)
## Sell Strategy   p1 vs p2
iter <- min(length(ind_up_p1p2), length(ind_down_p1p2))
Close_Date_p1p2 <- vector(length = iter)
Close_Price_p1p2 <- vector(length = iter)
Sell_Date_p1p2 <- vector(length = iter)
Sell_Price_p1p2 <- vector(length = iter)
Strat_return_Sell_p1p2 <- vector(length = iter)
for(i in 1:iter){
Sell_Date_p1p2[i] <- format(df_Strat[ind_down_p1p2[i], 1], "%Y-%m-%d")
Sell_Price_p1p2[i] <- df_Strat[ind_down_p1p2[i], 2]
Close_Date_p1p2[i] <- format(df_Strat[ind_up_p1p2[i+1], 1], "%Y-%m-%d")
Close_Price_p1p2[i] <- df_Strat[ind_up_p1p2[i+1], 2]
Strat_return_Sell_p1p2[i] <- (Close_Price_p1p2[i]/Sell_Price_p1p2[i] - 1) * 100 * -1
}
# Sell  p2 vs p3
iter <- min(length(ind_up_p2p3), length(ind_down_p2p3))
Close_Date_p2p3 <- vector(length = iter)
Close_Price_p2p3 <- vector(length = iter)
Sell_Date_p2p3 <- vector(length = iter)
Sell_Price_p2p3 <- vector(length = iter)
Strat_return_Sell_p2p3 <- vector(length = iter)
for(i in 1:iter){
Sell_Date_p2p3[i] <- format(df_Strat[ind_down_p2p3[i], 1], "%Y-%m-%d")
Sell_Price_p2p3[i] <- df_Strat[ind_down_p2p3[i], 2]
Close_Date_p2p3[i] <- format(df_Strat[ind_up_p2p3[i+1], 1], "%Y-%m-%d")
Close_Price_p2p3[i] <- df_Strat[ind_up_p2p3[i+1], 2]
Strat_return_Sell_p2p3[i] <- (Close_Price_p2p3[i]/Sell_Price_p2p3[i] - 1) * 100 * -1
}
Strat_summary_Sell1 <- list(Sell_Date_p1p2, Close_Date_p1p2, Sell_Price_p1p2,
Close_Price_p1p2, Strat_return_Sell_p1p2)
Strat_summary_Sell2 <- list(Sell_Date_p2p3, Close_Date_p2p3, Sell_Price_p2p3,
Close_Price_p2p3, Strat_return_Sell_p2p3)
names(Strat_summary_Sell1) <- c("Sell Date p1p2", "Closing Date p1p2", "Sell Price p1p2",
"Closing Price p1p2", "Ret % (Sell) p1p2")
names(Strat_summary_Sell2) <- c("Sell Date p2p3", "Closing Date p2p3", "Sell Price p2p3",
"Closing Price p2p3", "Ret % (Sell) p2p3")
Strat_summary_Sell <- list(Strat_summary_Sell1, Strat_summary_Sell2)
# Batting average
batt_avg_Buy <- round(length(which(Strat_summary_Buy1[[5]] >= 0)) +
length(which(Strat_summary_Buy2[[5]] >= 0))
/(length(ind_up_p1p2) + length(ind_up_p2p3)) * 100, 2)
batt_avg_Sell <- round(length(which(Strat_summary_Sell1[[5]] >= 0 )) +
length(which(Strat_summary_Sell2[[5]] >= 0))
/(length(ind_down_p1p2) + length(ind_down_p2p3)) * 100, 2)
# Output
list(df_Strat, Strat_summary_Buy, Strat_summary_Sell, batt_avg_Buy, batt_avg_Sell)
}
Strategy_AEMA(EMA(Prices, periods), periods)
files_source <- list.files(path = "Strategies/Adri_Strategy/", full.names = TRUE)
files_source <- files_source[!grepl("main", files_source)]
sapply(files_source, source, .GlobalEnv)
files_names <- list.files(path = "data/activos/", full.names = TRUE)
result <- data.frame(
ticker = vector(length = length(files_names)),
batt_avg_Buy = vector(length = length(files_names)),
batt_avg_Sell = vector(length = length(files_names))
)
## Select the periods for the Adri Strategy
periods <- c(8, 21, 200)
cont <- 1
system.time(
for (i in files_names){
print(cont)
Prices <- read_csv(file = i, col_types = list("D", "d", "d", "d", "d", "d", "d"))[-c(6, 7)]
Ticker <- gsub(pattern = "\\.Open", replacement = "", colnames(Prices)[2])
colnames(Prices) <- c("Date", "Open", "High", "Low", "Close")
result$ticker[cont] <- Ticker
result$batt_avg_Buy[cont] <- Strategy_AEMA(EMA(Prices, periods), periods)[[4]]
result$batt_avg_Sell[cont] <- Strategy_AEMA(EMA(Prices, periods), periods)[[5]]
cont <- cont + 1
}
)
424.35/60
ggplot(data = result, aes(ticker, batt_avg_Buy)) +
geom_point(shape = 21, col = "navy", fill = "royalblue") +
geom_hline(yintercept = 50, lwd = 0.8, lty = 2,  col = "salmon")
ggplot(data = result, aes(ticker, batt_avg_Sell)) +
geom_point(shape = 21, col = "green4", fill = "green3") +
geom_hline(yintercept = 50, lwd = 0.8, lty = 2,  col = "salmon")
